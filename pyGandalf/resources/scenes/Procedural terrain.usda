#usda 1.0

def "Hierachy"
{
    def "Entitye16eeb2a850a4bcb9f2368cc62429f55"
    {
        custom bool enabled = 1
        custom string id = "e16eeb2a850a4bcb9f2368cc62429f55"

        def "InfoComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.InfoComponent", "tag": "root", "enabled": true}'
        }

        def "TransformComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.TransformComponent", "translation": {"py/object": "glm.vec3", "py/state": {"py/tuple": [0.0, 0.0, 0.0]}}, "rotation": {"py/object": "glm.vec3", "py/state": {"py/tuple": [0.0, 0.0, 0.0]}}, "scale": {"py/object": "glm.vec3", "py/state": {"py/tuple": [1.0, 1.0, 1.0]}}, "local_matrix": {"py/object": "glm.mat4x4", "py/state": {"py/tuple": [{"py/tuple": [1.0, 0.0, 0.0, 0.0]}, {"py/tuple": [0.0, 1.0, 0.0, 0.0]}, {"py/tuple": [0.0, 0.0, 1.0, 0.0]}, {"py/tuple": [0.0, 0.0, 0.0, 1.0]}]}}, "world_matrix": {"py/object": "glm.mat4x4", "py/state": {"py/tuple": [{"py/tuple": [1.0, 0.0, 0.0, 0.0]}, {"py/tuple": [0.0, 1.0, 0.0, 0.0]}, {"py/tuple": [0.0, 0.0, 1.0, 0.0]}, {"py/tuple": [0.0, 0.0, 0.0, 1.0]}]}}, "quaternion": {"py/object": "glm.quat", "py/state": {"py/tuple": [1.0, 0.0, 0.0, 0.0]}}, "dirty": false, "static": false}'
        }

        def "LinkComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.LinkComponent", "parent_id": 0, "parent": null, "prev_parent": null, "children": [{"py/object": "pyGandalf.scene.entity.Entity", "id": {"py/object": "uuid.UUID", "hex": "f3d3900e0e0d4c22a7a6b135877904b4"}, "enabled": true}, {"py/object": "pyGandalf.scene.entity.Entity", "id": {"py/object": "uuid.UUID", "hex": "689b033f93be475cb463aaf38c9c2f68"}, "enabled": true}, {"py/object": "pyGandalf.scene.entity.Entity", "id": {"py/object": "uuid.UUID", "hex": "60258725090e4e0eb68e52bd75e8905a"}, "enabled": true}]}'
        }
    }

    def "Entityf3d3900e0e0d4c22a7a6b135877904b4"
    {
        custom bool enabled = 1
        custom string id = "f3d3900e0e0d4c22a7a6b135877904b4"

        def "InfoComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.InfoComponent", "tag": "camera", "enabled": true}'
        }

        def "TransformComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.TransformComponent", "translation": {"py/object": "glm.vec3", "py/state": {"py/tuple": [-12.693448066711426, 44.50947189331055, 22.862512588500977]}}, "rotation": {"py/object": "glm.vec3", "py/state": {"py/tuple": [-31.921890258789062, 398.0938415527344, 0.0]}}, "scale": {"py/object": "glm.vec3", "py/state": {"py/tuple": [1.0, 1.0, 1.0]}}, "local_matrix": {"py/object": "glm.mat4x4", "py/state": {"py/tuple": [{"py/tuple": [0.787001371383667, 0.0, -0.6169511675834656, 0.0]}, {"py/tuple": [-0.3262207508087158, 0.8487697243690491, -0.4161369502544403, 0.0]}, {"py/tuple": [0.5236495137214661, 0.5287626385688782, 0.6679829955101013, 0.0]}, {"py/tuple": [-12.693448066711426, 44.50947189331055, 22.862512588500977, 1.0]}]}}, "world_matrix": {"py/id": 4}, "quaternion": {"py/object": "glm.quat", "py/state": {"py/tuple": [-0.908811628818512, 0.25992724299430847, -0.3137615919113159, -0.08973827213048935]}}, "dirty": false, "static": false}'
        }

        def "LinkComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.LinkComponent", "parent_id": {"py/object": "uuid.UUID", "hex": "e16eeb2a850a4bcb9f2368cc62429f55"}, "parent": {"py/object": "pyGandalf.scene.entity.Entity", "id": {"py/id": 1}, "enabled": true}, "prev_parent": {"py/id": 2}, "children": []}'
        }

        def "CameraComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.CameraComponent", "zoom_level": 1.2, "fov": 45, "near": 0.1, "far": 2000, "aspect_ratio": 2.0806451612903225, "type": {"py/reduce": [{"py/type": "pyGandalf.scene.components.CameraComponent.Type"}, {"py/tuple": [1]}]}, "view": {"py/object": "glm.mat4x4", "py/state": {"py/tuple": [{"py/tuple": [0.787001371383667, -0.32622072100639343, 0.5236494541168213, -0.0]}, {"py/tuple": [-0.0, 0.8487697243690491, 0.5287626385688782, 0.0]}, {"py/tuple": [-0.6169512271881104, -0.4161369204521179, 0.6679829359054565, -0.0]}, {"py/tuple": [24.094816207885742, -32.40522003173828, -32.159793853759766, 1.0]}]}}, "projection": {"py/object": "glm.mat4x4", "py/state": {"py/tuple": [{"py/tuple": [1.1603196859359741, 0.0, 0.0, 0.0]}, {"py/tuple": [0.0, 2.4142134189605713, 0.0, 0.0]}, {"py/tuple": [0.0, 0.0, -1.000100016593933, -1.0]}, {"py/tuple": [0.0, 0.0, -0.2000100016593933, 0.0]}]}}, "view_projection": {"py/object": "glm.mat4x4", "py/state": {"py/tuple": [{"py/tuple": [0.9131731986999512, -0.7875664234161377, -0.5237018465995789, -0.5236494541168213]}, {"py/tuple": [0.0, 2.0491113662719727, -0.528815507888794, -0.5287626385688782]}, {"py/tuple": [-0.7158606648445129, -1.0046433210372925, -0.6680497527122498, -0.6679829359054565]}, {"py/tuple": [27.95768928527832, -78.23311614990234, 31.96299934387207, 32.159793853759766]}]}}, "primary": true}'
        }

        def "CameraControllerComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.CameraControllerComponent", "front": {"py/object": "glm.vec3", "py/state": {"py/tuple": [-0.5236517786979675, -0.5287626385688782, -0.6679812073707581]}}, "right": {"py/object": "glm.vec3", "py/state": {"py/tuple": [0.7869992852210999, -0.0, -0.6169538497924805]}}, "up": {"py/object": "glm.vec3", "py/state": {"py/tuple": [0.32622218132019043, -0.8487698435783386, 0.41613587737083435]}}, "world_up": {"py/object": "glm.vec3", "py/state": {"py/tuple": [0.0, 1.0, 0.0]}}, "yaw": 308.09403000000236, "pitch": 31.9218899999985, "movement_speed": 15, "mouse_sensitivity": 2, "zoom": 45.0, "prev_mouse_x": 734.0, "prev_mouse_y": 242.0}'
        }
    }

    def "Entity689b033f93be475cb463aaf38c9c2f68"
    {
        custom bool enabled = 1
        custom string id = "689b033f93be475cb463aaf38c9c2f68"

        def "InfoComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.InfoComponent", "tag": "terrain", "enabled": true}'
        }

        def "TransformComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.TransformComponent", "translation": {"py/object": "glm.vec3", "py/state": {"py/tuple": [-8.245583534240723, 0.0, -6.962412357330322]}}, "rotation": {"py/object": "glm.vec3", "py/state": {"py/tuple": [0.0, 0.0, 0.0]}}, "scale": {"py/object": "glm.vec3", "py/state": {"py/tuple": [1.0, 1.0, 1.0]}}, "local_matrix": {"py/object": "glm.mat4x4", "py/state": {"py/tuple": [{"py/tuple": [1.0, 0.0, 0.0, 0.0]}, {"py/tuple": [0.0, 1.0, 0.0, 0.0]}, {"py/tuple": [0.0, 0.0, 1.0, 0.0]}, {"py/tuple": [-8.245583534240723, 0.0, -6.962412357330322, 1.0]}]}}, "world_matrix": {"py/object": "glm.mat4x4", "py/state": {"py/tuple": [{"py/tuple": [1.0, 0.0, 0.0, 0.0]}, {"py/tuple": [0.0, 1.0, 0.0, 0.0]}, {"py/tuple": [0.0, 0.0, 1.0, 0.0]}, {"py/tuple": [-8.245583534240723, 0.0, -6.962412357330322, 1.0]}]}}, "quaternion": {"py/object": "glm.quat", "py/state": {"py/tuple": [1.0, 0.0, 0.0, 0.0]}}, "dirty": false, "static": false}'
        }

        def "LinkComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.LinkComponent", "parent_id": {"py/object": "uuid.UUID", "hex": "e16eeb2a850a4bcb9f2368cc62429f55"}, "parent": {"py/object": "pyGandalf.scene.entity.Entity", "id": {"py/id": 1}, "enabled": true}, "prev_parent": {"py/id": 2}, "children": [{"py/object": "pyGandalf.scene.entity.Entity", "id": {"py/object": "uuid.UUID", "hex": "7290fe5143c9484884e34a7d3f9e0ecc"}, "enabled": true}]}'
        }

        def "StaticMeshComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.StaticMeshComponent", "name": "terrain_mesh", "attributes": [{"py/reduce": [{"py/function": "numpy._core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [256, 3]}, {"py/reduce": [{"py/type": "numpy.dtype"}, {"py/tuple": ["f4", false, true]}, {"py/tuple": [3, "<", null, null, null, -1, -1, 0]}]}, false, {"py/b64": "AADIwgAAAAAAAMjCAACWwgAAAAAAAMjCAADIwgAAAAAAAJbCAACWwgAAAAAAAJbCAADIwgAAAAAAAJbCAACWwgAAAAAAAJbCAADIwgAAAAAAAEjCAACWwgAAAAAAAEjCAADIwgAAAAAAAEjCAACWwgAAAAAAAEjCAADIwgAAAAAAAMjBAACWwgAAAAAAAMjBAADIwgAAAAAAAMjBAACWwgAAAAAAAMjBAADIwgAAAAAAAAAAAACWwgAAAAAAAAAAAADIwgAAAAAAAAAAAACWwgAAAAAAAAAAAADIwgAAAAAAAMhBAACWwgAAAAAAAMhBAADIwgAAAAAAAMhBAACWwgAAAAAAAMhBAADIwgAAAAAAAEhCAACWwgAAAAAAAEhCAADIwgAAAAAAAEhCAACWwgAAAAAAAEhCAADIwgAAAAAAAJZCAACWwgAAAAAAAJZCAADIwgAAAAAAAJZCAACWwgAAAAAAAJZCAADIwgAAAAAAAMhCAACWwgAAAAAAAMhCAACWwgAAAAAAAMjCAABIwgAAAAAAAMjCAACWwgAAAAAAAJbCAABIwgAAAAAAAJbCAACWwgAAAAAAAJbCAABIwgAAAAAAAJbCAACWwgAAAAAAAEjCAABIwgAAAAAAAEjCAACWwgAAAAAAAEjCAABIwgAAAAAAAEjCAACWwgAAAAAAAMjBAABIwgAAAAAAAMjBAACWwgAAAAAAAMjBAABIwgAAAAAAAMjBAACWwgAAAAAAAAAAAABIwgAAAAAAAAAAAACWwgAAAAAAAAAAAABIwgAAAAAAAAAAAACWwgAAAAAAAMhBAABIwgAAAAAAAMhBAACWwgAAAAAAAMhBAABIwgAAAAAAAMhBAACWwgAAAAAAAEhCAABIwgAAAAAAAEhCAACWwgAAAAAAAEhCAABIwgAAAAAAAEhCAACWwgAAAAAAAJZCAABIwgAAAAAAAJZCAACWwgAAAAAAAJZCAABIwgAAAAAAAJZCAACWwgAAAAAAAMhCAABIwgAAAAAAAMhCAABIwgAAAAAAAMjCAADIwQAAAAAAAMjCAABIwgAAAAAAAJbCAADIwQAAAAAAAJbCAABIwgAAAAAAAJbCAADIwQAAAAAAAJbCAABIwgAAAAAAAEjCAADIwQAAAAAAAEjCAABIwgAAAAAAAEjCAADIwQAAAAAAAEjCAABIwgAAAAAAAMjBAADIwQAAAAAAAMjBAABIwgAAAAAAAMjBAADIwQAAAAAAAMjBAABIwgAAAAAAAAAAAADIwQAAAAAAAAAAAABIwgAAAAAAAAAAAADIwQAAAAAAAAAAAABIwgAAAAAAAMhBAADIwQAAAAAAAMhBAABIwgAAAAAAAMhBAADIwQAAAAAAAMhBAABIwgAAAAAAAEhCAADIwQAAAAAAAEhCAABIwgAAAAAAAEhCAADIwQAAAAAAAEhCAABIwgAAAAAAAJZCAADIwQAAAAAAAJZCAABIwgAAAAAAAJZCAADIwQAAAAAAAJZCAABIwgAAAAAAAMhCAADIwQAAAAAAAMhCAADIwQAAAAAAAMjCAAAAAAAAAAAAAMjCAADIwQAAAAAAAJbCAAAAAAAAAAAAAJbCAADIwQAAAAAAAJbCAAAAAAAAAAAAAJbCAADIwQAAAAAAAEjCAAAAAAAAAAAAAEjCAADIwQAAAAAAAEjCAAAAAAAAAAAAAEjCAADIwQAAAAAAAMjBAAAAAAAAAAAAAMjBAADIwQAAAAAAAMjBAAAAAAAAAAAAAMjBAADIwQAAAAAAAAAAAAAAAAAAAAAAAAAAAADIwQAAAAAAAAAAAAAAAAAAAAAAAAAAAADIwQAAAAAAAMhBAAAAAAAAAAAAAMhBAADIwQAAAAAAAMhBAAAAAAAAAAAAAMhBAADIwQAAAAAAAEhCAAAAAAAAAAAAAEhCAADIwQAAAAAAAEhCAAAAAAAAAAAAAEhCAADIwQAAAAAAAJZCAAAAAAAAAAAAAJZCAADIwQAAAAAAAJZCAAAAAAAAAAAAAJZCAADIwQAAAAAAAMhCAAAAAAAAAAAAAMhCAAAAAAAAAAAAAMjCAADIQQAAAAAAAMjCAAAAAAAAAAAAAJbCAADIQQAAAAAAAJbCAAAAAAAAAAAAAJbCAADIQQAAAAAAAJbCAAAAAAAAAAAAAEjCAADIQQAAAAAAAEjCAAAAAAAAAAAAAEjCAADIQQAAAAAAAEjCAAAAAAAAAAAAAMjBAADIQQAAAAAAAMjBAAAAAAAAAAAAAMjBAADIQQAAAAAAAMjBAAAAAAAAAAAAAAAAAADIQQAAAAAAAAAAAAAAAAAAAAAAAAAAAADIQQAAAAAAAAAAAAAAAAAAAAAAAMhBAADIQQAAAAAAAMhBAAAAAAAAAAAAAMhBAADIQQAAAAAAAMhBAAAAAAAAAAAAAEhCAADIQQAAAAAAAEhCAAAAAAAAAAAAAEhCAADIQQAAAAAAAEhCAAAAAAAAAAAAAJZCAADIQQAAAAAAAJZCAAAAAAAAAAAAAJZCAADIQQAAAAAAAJZCAAAAAAAAAAAAAMhCAADIQQAAAAAAAMhCAADIQQAAAAAAAMjCAABIQgAAAAAAAMjCAADIQQAAAAAAAJbCAABIQgAAAAAAAJbCAADIQQAAAAAAAJbCAABIQgAAAAAAAJbCAADIQQAAAAAAAEjCAABIQgAAAAAAAEjCAADIQQAAAAAAAEjCAABIQgAAAAAAAEjCAADIQQAAAAAAAMjBAABIQgAAAAAAAMjBAADIQQAAAAAAAMjBAABIQgAAAAAAAMjBAADIQQAAAAAAAAAAAABIQgAAAAAAAAAAAADIQQAAAAAAAAAAAABIQgAAAAAAAAAAAADIQQAAAAAAAMhBAABIQgAAAAAAAMhBAADIQQAAAAAAAMhBAABIQgAAAAAAAMhBAADIQQAAAAAAAEhCAABIQgAAAAAAAEhCAADIQQAAAAAAAEhCAABIQgAAAAAAAEhCAADIQQAAAAAAAJZCAABIQgAAAAAAAJZCAADIQQAAAAAAAJZCAABIQgAAAAAAAJZCAADIQQAAAAAAAMhCAABIQgAAAAAAAMhCAABIQgAAAAAAAMjCAACWQgAAAAAAAMjCAABIQgAAAAAAAJbCAACWQgAAAAAAAJbCAABIQgAAAAAAAJbCAACWQgAAAAAAAJbCAABIQgAAAAAAAEjCAACWQgAAAAAAAEjCAABIQgAAAAAAAEjCAACWQgAAAAAAAEjCAABIQgAAAAAAAMjBAACWQgAAAAAAAMjBAABIQgAAAAAAAMjBAACWQgAAAAAAAMjBAABIQgAAAAAAAAAAAACWQgAAAAAAAAAAAABIQgAAAAAAAAAAAACWQgAAAAAAAAAAAABIQgAAAAAAAMhBAACWQgAAAAAAAMhBAABIQgAAAAAAAMhBAACWQgAAAAAAAMhBAABIQgAAAAAAAEhCAACWQgAAAAAAAEhCAABIQgAAAAAAAEhCAACWQgAAAAAAAEhCAABIQgAAAAAAAJZCAACWQgAAAAAAAJZCAABIQgAAAAAAAJZCAACWQgAAAAAAAJZCAABIQgAAAAAAAMhCAACWQgAAAAAAAMhCAACWQgAAAAAAAMjCAADIQgAAAAAAAMjCAACWQgAAAAAAAJbCAADIQgAAAAAAAJbCAACWQgAAAAAAAJbCAADIQgAAAAAAAJbCAACWQgAAAAAAAEjCAADIQgAAAAAAAEjCAACWQgAAAAAAAEjCAADIQgAAAAAAAEjCAACWQgAAAAAAAMjBAADIQgAAAAAAAMjBAACWQgAAAAAAAMjBAADIQgAAAAAAAMjBAACWQgAAAAAAAAAAAADIQgAAAAAAAAAAAACWQgAAAAAAAAAAAADIQgAAAAAAAAAAAACWQgAAAAAAAMhBAADIQgAAAAAAAMhBAACWQgAAAAAAAMhBAADIQgAAAAAAAMhBAACWQgAAAAAAAEhCAADIQgAAAAAAAEhCAACWQgAAAAAAAEhCAADIQgAAAAAAAEhCAACWQgAAAAAAAJZCAADIQgAAAAAAAJZCAACWQgAAAAAAAJZCAADIQgAAAAAAAJZCAACWQgAAAAAAAMhCAADIQgAAAAAAAMhC"}]}]}, {"py/reduce": [{"py/function": "numpy._core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [256, 2]}, {"py/id": 3}, false, {"py/b64": "AAAAAAAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAPgAAAD4AAAAAAAAAPgAAAD4AAAA+AAAAAAAAgD4AAAA+AACAPgAAAAAAAIA+AAAAPgAAgD4AAAAAAADAPgAAAD4AAMA+AAAAAAAAwD4AAAA+AADAPgAAAAAAAAA/AAAAPgAAAD8AAAAAAAAAPwAAAD4AAAA/AAAAAAAAID8AAAA+AAAgPwAAAAAAACA/AAAAPgAAID8AAAAAAABAPwAAAD4AAEA/AAAAAAAAQD8AAAA+AABAPwAAAAAAAGA/AAAAPgAAYD8AAAAAAABgPwAAAD4AAGA/AAAAAAAAgD8AAAA+AACAPwAAAD4AAAAAAACAPgAAAAAAAAA+AAAAPgAAgD4AAAA+AAAAPgAAAD4AAIA+AAAAPgAAAD4AAIA+AACAPgAAgD4AAAA+AACAPgAAgD4AAIA+AAAAPgAAwD4AAIA+AADAPgAAAD4AAMA+AACAPgAAwD4AAAA+AAAAPwAAgD4AAAA/AAAAPgAAAD8AAIA+AAAAPwAAAD4AACA/AACAPgAAID8AAAA+AAAgPwAAgD4AACA/AAAAPgAAQD8AAIA+AABAPwAAAD4AAEA/AACAPgAAQD8AAAA+AABgPwAAgD4AAGA/AAAAPgAAYD8AAIA+AABgPwAAAD4AAIA/AACAPgAAgD8AAIA+AAAAAAAAwD4AAAAAAACAPgAAAD4AAMA+AAAAPgAAgD4AAAA+AADAPgAAAD4AAIA+AACAPgAAwD4AAIA+AACAPgAAgD4AAMA+AACAPgAAgD4AAMA+AADAPgAAwD4AAIA+AADAPgAAwD4AAMA+AACAPgAAAD8AAMA+AAAAPwAAgD4AAAA/AADAPgAAAD8AAIA+AAAgPwAAwD4AACA/AACAPgAAID8AAMA+AAAgPwAAgD4AAEA/AADAPgAAQD8AAIA+AABAPwAAwD4AAEA/AACAPgAAYD8AAMA+AABgPwAAgD4AAGA/AADAPgAAYD8AAIA+AACAPwAAwD4AAIA/AADAPgAAAAAAAAA/AAAAAAAAwD4AAAA+AAAAPwAAAD4AAMA+AAAAPgAAAD8AAAA+AADAPgAAgD4AAAA/AACAPgAAwD4AAIA+AAAAPwAAgD4AAMA+AADAPgAAAD8AAMA+AADAPgAAwD4AAAA/AADAPgAAwD4AAAA/AAAAPwAAAD8AAMA+AAAAPwAAAD8AAAA/AADAPgAAID8AAAA/AAAgPwAAwD4AACA/AAAAPwAAID8AAMA+AABAPwAAAD8AAEA/AADAPgAAQD8AAAA/AABAPwAAwD4AAGA/AAAAPwAAYD8AAMA+AABgPwAAAD8AAGA/AADAPgAAgD8AAAA/AACAPwAAAD8AAAAAAAAgPwAAAAAAAAA/AAAAPgAAID8AAAA+AAAAPwAAAD4AACA/AAAAPgAAAD8AAIA+AAAgPwAAgD4AAAA/AACAPgAAID8AAIA+AAAAPwAAwD4AACA/AADAPgAAAD8AAMA+AAAgPwAAwD4AAAA/AAAAPwAAID8AAAA/AAAAPwAAAD8AACA/AAAAPwAAAD8AACA/AAAgPwAAID8AAAA/AAAgPwAAID8AACA/AAAAPwAAQD8AACA/AABAPwAAAD8AAEA/AAAgPwAAQD8AAAA/AABgPwAAID8AAGA/AAAAPwAAYD8AACA/AABgPwAAAD8AAIA/AAAgPwAAgD8AACA/AAAAAAAAQD8AAAAAAAAgPwAAAD4AAEA/AAAAPgAAID8AAAA+AABAPwAAAD4AACA/AACAPgAAQD8AAIA+AAAgPwAAgD4AAEA/AACAPgAAID8AAMA+AABAPwAAwD4AACA/AADAPgAAQD8AAMA+AAAgPwAAAD8AAEA/AAAAPwAAID8AAAA/AABAPwAAAD8AACA/AAAgPwAAQD8AACA/AAAgPwAAID8AAEA/AAAgPwAAID8AAEA/AABAPwAAQD8AACA/AABAPwAAQD8AAEA/AAAgPwAAYD8AAEA/AABgPwAAID8AAGA/AABAPwAAYD8AACA/AACAPwAAQD8AAIA/AABAPwAAAAAAAGA/AAAAAAAAQD8AAAA+AABgPwAAAD4AAEA/AAAAPgAAYD8AAAA+AABAPwAAgD4AAGA/AACAPgAAQD8AAIA+AABgPwAAgD4AAEA/AADAPgAAYD8AAMA+AABAPwAAwD4AAGA/AADAPgAAQD8AAAA/AABgPwAAAD8AAEA/AAAAPwAAYD8AAAA/AABAPwAAID8AAGA/AAAgPwAAQD8AACA/AABgPwAAID8AAEA/AABAPwAAYD8AAEA/AABAPwAAQD8AAGA/AABAPwAAQD8AAGA/AABgPwAAYD8AAEA/AABgPwAAYD8AAGA/AABAPwAAgD8AAGA/AACAPwAAYD8AAAAAAACAPwAAAAAAAGA/AAAAPgAAgD8AAAA+AABgPwAAAD4AAIA/AAAAPgAAYD8AAIA+AACAPwAAgD4AAGA/AACAPgAAgD8AAIA+AABgPwAAwD4AAIA/AADAPgAAYD8AAMA+AACAPwAAwD4AAGA/AAAAPwAAgD8AAAA/AABgPwAAAD8AAIA/AAAAPwAAYD8AACA/AACAPwAAID8AAGA/AAAgPwAAgD8AACA/AABgPwAAQD8AAIA/AABAPwAAYD8AAEA/AACAPwAAQD8AAGA/AABgPwAAgD8AAGA/AABgPwAAYD8AAIA/AABgPwAAYD8AAIA/AACAPwAAgD8="}]}]}], "indices": null, "render_pipeline": {"py/reduce": [{"py/function": "numpy._core.multiarray.scalar"}, {"py/tuple": [{"py/reduce": [{"py/type": "numpy.dtype"}, {"py/tuple": ["u4", false, true]}, {"py/tuple": [3, "<", null, null, null, -1, -1, 0]}]}, {"py/b64": "BAAAAA=="}]}]}, "buffers": [{"py/reduce": [{"py/function": "numpy._core.multiarray.scalar"}, {"py/tuple": [{"py/id": 6}, {"py/b64": "CAAAAA=="}]}]}, {"py/reduce": [{"py/function": "numpy._core.multiarray.scalar"}, {"py/tuple": [{"py/id": 6}, {"py/b64": "CQAAAA=="}]}]}], "index_buffer": null, "changed": false, "batch": 0, "load_from_file": false, "hash": {"py/object": "uuid.UUID", "hex": "8a1bbe2f71cb40928616f3bf9e6e760c"}}'
        }

        def "MaterialComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.MaterialComponent", "name": "M_Terrain", "instance": {"py/object": "pyGandalf.utilities.opengl_material_lib.MaterialInstance", "name": "M_Terrain", "data": {"py/object": "pyGandalf.utilities.opengl_material_lib.MaterialData", "base_template": "default_tessellation", "color": {"py/object": "glm.vec4", "py/state": {"py/tuple": [1.0, 1.0, 1.0, 1.0]}}, "textures": ["grassAlbedo", "snowAlbedo", "sandAlbedo", "grassNormal", "snowNormal", "sandNormal", "grassMask", "snowMask", "sandMask", "rockAlbedo", "rockNormal", "rockMask", "heightmap", "normals"], "glossiness": 3.0, "scale": 200, "elevationScale": 20, "generate": false, "mapSize": 64.0, "cameraCoords": {"py/object": "glm.vec2", "py/state": {"py/tuple": [-8.245583534240723, -6.962412357330322]}}, "metallic": 0.0, "roughness": 0.6, "ao": 1.0, "depthOfBlend": 0.7599999904632568, "maxHeight": 60.0, "heightOfSnow": 0.9, "heightOfGrass": 0.03, "rockColor": {"py/object": "glm.vec4", "py/state": {"py/tuple": [0.12999999523162842, 0.12999999523162842, 0.12999999523162842, 1.0]}}, "rockBlendAmount": 1.14, "slopeTreshold": 0.44999998807907104, "snowColor": {"py/object": "glm.vec4", "py/state": {"py/tuple": [0.9300000071525574, 0.8299999833106995, 0.8299999833106995, 1.0]}}, "grassColor": {"py/object": "glm.vec4", "py/state": {"py/tuple": [0.25999999046325684, 0.8399999737739563, 0.20000000298023224, 1.0]}}, "sandColor": {"py/object": "glm.vec4", "py/state": {"py/tuple": [1.0, 0.699999988079071, 0.5400000214576721, 1.0]}}, "tiling": {"py/object": "glm.ivec2", "py/state": {"py/tuple": [10, 10]}}, "useTextures": false}, "descriptor": {"py/object": "pyGandalf.utilities.opengl_material_lib.MaterialDescriptor", "primitive": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_PATCHES", 14]}, "py/state": "GL_PATCHES"}, "cull_enabled": true, "cull_face": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FRONT", 1028]}, "py/state": "GL_FRONT"}, "patch_resolution": 8, "vertices_per_patch": 4, "depth_enabled": true, "depth_func": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LEQUAL", 515]}, "py/state": "GL_LEQUAL"}, "depth_mask": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_TRUE", 1]}, "py/state": "GL_TRUE"}, "blend_enabled": true, "blend_func_source": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_SRC_ALPHA", 770]}, "py/state": "GL_SRC_ALPHA"}, "blend_func_destination": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_ONE_MINUS_SRC_ALPHA", 771]}, "py/state": "GL_ONE_MINUS_SRC_ALPHA"}, "blend_equation": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FUNC_ADD", 32774]}, "py/state": "GL_FUNC_ADD"}}, "isMeshShader": false, "shader_program": 8, "shader_params": {"grassAlbedo": "sampler2D", "snowAlbedo": "sampler2D", "sandAlbedo": "sampler2D", "grassNormal": "sampler2D", "snowNormal": "sampler2D", "sandNormal": "sampler2D", "grassMask": "sampler2D", "snowMask": "sampler2D", "sandMask": "sampler2D", "rockAlbedo": "sampler2D", "rockNormal": "sampler2D", "rockMask": "sampler2D", "tiling": "ivec2", "useTextures": "int", "u_ViewPosition": "vec3", "u_Color": "vec3", "metallic": "float", "roughness": "float", "ao": "float", "u_LightCount": "int", "u_LightIntensities": "float[16]", "u_LightPositions": "vec3[16]", "u_LightColors": "vec3[16]", "_Depth": "float", "maxHeight": "float", "heightOfSnow": "float", "heightOfGrass": "float", "rockColor": "vec4", "rockBlendAmount": "float", "slopeTreshold": "float", "snowColor": "vec4", "grassColor": "vec4", "sandColor": "vec4", "clip": "int", "waterPlane": "float", "u_Model": "mat4", "u_View": "mat4", "mapSize": "int", "u_Projection": "mat4", "cameraCoords": "vec2", "scale": "int", "elevationScale": "int", "generate": "int", "imgOutput": "sampler2D", "normals": "sampler2D"}}}'
        }

        def "TerrainComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.TerrainComponent", "minHeight": 0.0, "maxHeight": 10.0, "scale": 200, "elevationScale": 20, "mapSize": 512, "patch_resolution": 8, "vertices_per_patch": 4, "cameraCoords": {"py/object": "glm.vec2", "py/state": {"py/tuple": [-8.245583534240723, -6.962412357330322]}}, "camera": {"py/object": "pyGandalf.scene.entity.Entity", "id": {"py/object": "uuid.UUID", "hex": "f3d3900e0e0d4c22a7a6b135877904b4"}, "enabled": true}, "generate": false, "cameraMoved": false, "erode": true, "minTerrainHeight": [], "maxTerrainHeight": [], "heightMap": [], "heights": [], "vertices": {"py/reduce": [{"py/function": "numpy._core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [256, 3]}, {"py/reduce": [{"py/type": "numpy.dtype"}, {"py/tuple": ["f4", false, true]}, {"py/tuple": [3, "<", null, null, null, -1, -1, 0]}]}, false, {"py/b64": "AADIwgAAAAAAAMjCAACWwgAAAAAAAMjCAADIwgAAAAAAAJbCAACWwgAAAAAAAJbCAADIwgAAAAAAAJbCAACWwgAAAAAAAJbCAADIwgAAAAAAAEjCAACWwgAAAAAAAEjCAADIwgAAAAAAAEjCAACWwgAAAAAAAEjCAADIwgAAAAAAAMjBAACWwgAAAAAAAMjBAADIwgAAAAAAAMjBAACWwgAAAAAAAMjBAADIwgAAAAAAAAAAAACWwgAAAAAAAAAAAADIwgAAAAAAAAAAAACWwgAAAAAAAAAAAADIwgAAAAAAAMhBAACWwgAAAAAAAMhBAADIwgAAAAAAAMhBAACWwgAAAAAAAMhBAADIwgAAAAAAAEhCAACWwgAAAAAAAEhCAADIwgAAAAAAAEhCAACWwgAAAAAAAEhCAADIwgAAAAAAAJZCAACWwgAAAAAAAJZCAADIwgAAAAAAAJZCAACWwgAAAAAAAJZCAADIwgAAAAAAAMhCAACWwgAAAAAAAMhCAACWwgAAAAAAAMjCAABIwgAAAAAAAMjCAACWwgAAAAAAAJbCAABIwgAAAAAAAJbCAACWwgAAAAAAAJbCAABIwgAAAAAAAJbCAACWwgAAAAAAAEjCAABIwgAAAAAAAEjCAACWwgAAAAAAAEjCAABIwgAAAAAAAEjCAACWwgAAAAAAAMjBAABIwgAAAAAAAMjBAACWwgAAAAAAAMjBAABIwgAAAAAAAMjBAACWwgAAAAAAAAAAAABIwgAAAAAAAAAAAACWwgAAAAAAAAAAAABIwgAAAAAAAAAAAACWwgAAAAAAAMhBAABIwgAAAAAAAMhBAACWwgAAAAAAAMhBAABIwgAAAAAAAMhBAACWwgAAAAAAAEhCAABIwgAAAAAAAEhCAACWwgAAAAAAAEhCAABIwgAAAAAAAEhCAACWwgAAAAAAAJZCAABIwgAAAAAAAJZCAACWwgAAAAAAAJZCAABIwgAAAAAAAJZCAACWwgAAAAAAAMhCAABIwgAAAAAAAMhCAABIwgAAAAAAAMjCAADIwQAAAAAAAMjCAABIwgAAAAAAAJbCAADIwQAAAAAAAJbCAABIwgAAAAAAAJbCAADIwQAAAAAAAJbCAABIwgAAAAAAAEjCAADIwQAAAAAAAEjCAABIwgAAAAAAAEjCAADIwQAAAAAAAEjCAABIwgAAAAAAAMjBAADIwQAAAAAAAMjBAABIwgAAAAAAAMjBAADIwQAAAAAAAMjBAABIwgAAAAAAAAAAAADIwQAAAAAAAAAAAABIwgAAAAAAAAAAAADIwQAAAAAAAAAAAABIwgAAAAAAAMhBAADIwQAAAAAAAMhBAABIwgAAAAAAAMhBAADIwQAAAAAAAMhBAABIwgAAAAAAAEhCAADIwQAAAAAAAEhCAABIwgAAAAAAAEhCAADIwQAAAAAAAEhCAABIwgAAAAAAAJZCAADIwQAAAAAAAJZCAABIwgAAAAAAAJZCAADIwQAAAAAAAJZCAABIwgAAAAAAAMhCAADIwQAAAAAAAMhCAADIwQAAAAAAAMjCAAAAAAAAAAAAAMjCAADIwQAAAAAAAJbCAAAAAAAAAAAAAJbCAADIwQAAAAAAAJbCAAAAAAAAAAAAAJbCAADIwQAAAAAAAEjCAAAAAAAAAAAAAEjCAADIwQAAAAAAAEjCAAAAAAAAAAAAAEjCAADIwQAAAAAAAMjBAAAAAAAAAAAAAMjBAADIwQAAAAAAAMjBAAAAAAAAAAAAAMjBAADIwQAAAAAAAAAAAAAAAAAAAAAAAAAAAADIwQAAAAAAAAAAAAAAAAAAAAAAAAAAAADIwQAAAAAAAMhBAAAAAAAAAAAAAMhBAADIwQAAAAAAAMhBAAAAAAAAAAAAAMhBAADIwQAAAAAAAEhCAAAAAAAAAAAAAEhCAADIwQAAAAAAAEhCAAAAAAAAAAAAAEhCAADIwQAAAAAAAJZCAAAAAAAAAAAAAJZCAADIwQAAAAAAAJZCAAAAAAAAAAAAAJZCAADIwQAAAAAAAMhCAAAAAAAAAAAAAMhCAAAAAAAAAAAAAMjCAADIQQAAAAAAAMjCAAAAAAAAAAAAAJbCAADIQQAAAAAAAJbCAAAAAAAAAAAAAJbCAADIQQAAAAAAAJbCAAAAAAAAAAAAAEjCAADIQQAAAAAAAEjCAAAAAAAAAAAAAEjCAADIQQAAAAAAAEjCAAAAAAAAAAAAAMjBAADIQQAAAAAAAMjBAAAAAAAAAAAAAMjBAADIQQAAAAAAAMjBAAAAAAAAAAAAAAAAAADIQQAAAAAAAAAAAAAAAAAAAAAAAAAAAADIQQAAAAAAAAAAAAAAAAAAAAAAAMhBAADIQQAAAAAAAMhBAAAAAAAAAAAAAMhBAADIQQAAAAAAAMhBAAAAAAAAAAAAAEhCAADIQQAAAAAAAEhCAAAAAAAAAAAAAEhCAADIQQAAAAAAAEhCAAAAAAAAAAAAAJZCAADIQQAAAAAAAJZCAAAAAAAAAAAAAJZCAADIQQAAAAAAAJZCAAAAAAAAAAAAAMhCAADIQQAAAAAAAMhCAADIQQAAAAAAAMjCAABIQgAAAAAAAMjCAADIQQAAAAAAAJbCAABIQgAAAAAAAJbCAADIQQAAAAAAAJbCAABIQgAAAAAAAJbCAADIQQAAAAAAAEjCAABIQgAAAAAAAEjCAADIQQAAAAAAAEjCAABIQgAAAAAAAEjCAADIQQAAAAAAAMjBAABIQgAAAAAAAMjBAADIQQAAAAAAAMjBAABIQgAAAAAAAMjBAADIQQAAAAAAAAAAAABIQgAAAAAAAAAAAADIQQAAAAAAAAAAAABIQgAAAAAAAAAAAADIQQAAAAAAAMhBAABIQgAAAAAAAMhBAADIQQAAAAAAAMhBAABIQgAAAAAAAMhBAADIQQAAAAAAAEhCAABIQgAAAAAAAEhCAADIQQAAAAAAAEhCAABIQgAAAAAAAEhCAADIQQAAAAAAAJZCAABIQgAAAAAAAJZCAADIQQAAAAAAAJZCAABIQgAAAAAAAJZCAADIQQAAAAAAAMhCAABIQgAAAAAAAMhCAABIQgAAAAAAAMjCAACWQgAAAAAAAMjCAABIQgAAAAAAAJbCAACWQgAAAAAAAJbCAABIQgAAAAAAAJbCAACWQgAAAAAAAJbCAABIQgAAAAAAAEjCAACWQgAAAAAAAEjCAABIQgAAAAAAAEjCAACWQgAAAAAAAEjCAABIQgAAAAAAAMjBAACWQgAAAAAAAMjBAABIQgAAAAAAAMjBAACWQgAAAAAAAMjBAABIQgAAAAAAAAAAAACWQgAAAAAAAAAAAABIQgAAAAAAAAAAAACWQgAAAAAAAAAAAABIQgAAAAAAAMhBAACWQgAAAAAAAMhBAABIQgAAAAAAAMhBAACWQgAAAAAAAMhBAABIQgAAAAAAAEhCAACWQgAAAAAAAEhCAABIQgAAAAAAAEhCAACWQgAAAAAAAEhCAABIQgAAAAAAAJZCAACWQgAAAAAAAJZCAABIQgAAAAAAAJZCAACWQgAAAAAAAJZCAABIQgAAAAAAAMhCAACWQgAAAAAAAMhCAACWQgAAAAAAAMjCAADIQgAAAAAAAMjCAACWQgAAAAAAAJbCAADIQgAAAAAAAJbCAACWQgAAAAAAAJbCAADIQgAAAAAAAJbCAACWQgAAAAAAAEjCAADIQgAAAAAAAEjCAACWQgAAAAAAAEjCAADIQgAAAAAAAEjCAACWQgAAAAAAAMjBAADIQgAAAAAAAMjBAACWQgAAAAAAAMjBAADIQgAAAAAAAMjBAACWQgAAAAAAAAAAAADIQgAAAAAAAAAAAACWQgAAAAAAAAAAAADIQgAAAAAAAAAAAACWQgAAAAAAAMhBAADIQgAAAAAAAMhBAACWQgAAAAAAAMhBAADIQgAAAAAAAMhBAACWQgAAAAAAAEhCAADIQgAAAAAAAEhCAACWQgAAAAAAAEhCAADIQgAAAAAAAEhCAACWQgAAAAAAAJZCAADIQgAAAAAAAJZCAACWQgAAAAAAAJZCAADIQgAAAAAAAJZCAACWQgAAAAAAAMhCAADIQgAAAAAAAMhC"}]}]}, "indices": [], "shader": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["c:\\\\", "users", "oarka", "desktop", "pygandalf", "pygandalf", "pyGandalf", "resources", "shaders", "opengl", "heightmap.compute"]}]}, "textures": [{"py/reduce": [{"py/function": "numpy._core.multiarray.scalar"}, {"py/tuple": [{"py/reduce": [{"py/type": "numpy.dtype"}, {"py/tuple": ["u4", false, true]}, {"py/tuple": [3, "<", null, null, null, -1, -1, 0]}]}, {"py/b64": "DwAAAA=="}]}]}, {"py/reduce": [{"py/function": "numpy._core.multiarray.scalar"}, {"py/tuple": [{"py/id": 14}, {"py/b64": "EAAAAA=="}]}]}, {"py/reduce": [{"py/function": "numpy._core.multiarray.scalar"}, {"py/tuple": [{"py/id": 14}, {"py/b64": "EwAAAA=="}]}]}], "dispatch": false, "ID": 13, "uniformsDictionary": {}, "frequency": 0.3499999940395355, "lacunarity": 2.0, "persistence": 0.5, "octaves": 12, "turbulance": false, "Ridges": false, "ridgesStrength": 2, "seed": 0, "fallOffEnabled": 0, "fallOffType": 0, "fallOffHeight": 0.2, "a": 2.2, "b": 0.4, "underWaterRavines": 0, "clampHeight": 0, "offsetX": 1.0, "offsetY": 1.0, "loaded": 0, "workGroupsX": 512, "workGroupsY": 512, "workGroupsZ": 1, "save": false, "run": false}'
        }

        def "ErosionComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.ErosionComponent", "width": 512, "height": 512, "heightmapId": {"py/reduce": [{"py/function": "numpy._core.multiarray.scalar"}, {"py/tuple": [{"py/reduce": [{"py/type": "numpy.dtype"}, {"py/tuple": ["u4", false, true]}, {"py/tuple": [3, "<", null, null, null, -1, -1, 0]}]}, {"py/b64": "DwAAAA=="}]}]}, "dropsPosSpeedId": {"py/reduce": [{"py/function": "numpy._core.multiarray.scalar"}, {"py/tuple": [{"py/id": 2}, {"py/b64": "EQAAAA=="}]}]}, "dropsVolSedId": {"py/reduce": [{"py/function": "numpy._core.multiarray.scalar"}, {"py/tuple": [{"py/id": 2}, {"py/b64": "EgAAAA=="}]}]}, "normalsId": {"py/reduce": [{"py/function": "numpy._core.multiarray.scalar"}, {"py/tuple": [{"py/id": 2}, {"py/b64": "EwAAAA=="}]}]}, "erosionId": 15, "save": false, "enabled": false, "started": 1, "counter": 1000}'
        }
    }

    def "Entity60258725090e4e0eb68e52bd75e8905a"
    {
        custom bool enabled = 1
        custom string id = "60258725090e4e0eb68e52bd75e8905a"

        def "InfoComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.InfoComponent", "tag": "light", "enabled": true}'
        }

        def "TransformComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.TransformComponent", "translation": {"py/object": "glm.vec3", "py/state": {"py/tuple": [-3.0, 50.0, 2.0]}}, "rotation": {"py/object": "glm.vec3", "py/state": {"py/tuple": [0.0, 0.0, 0.0]}}, "scale": {"py/object": "glm.vec3", "py/state": {"py/tuple": [1.0, 1.0, 1.0]}}, "local_matrix": {"py/object": "glm.mat4x4", "py/state": {"py/tuple": [{"py/tuple": [1.0, 0.0, 0.0, 0.0]}, {"py/tuple": [0.0, 1.0, 0.0, 0.0]}, {"py/tuple": [0.0, 0.0, 1.0, 0.0]}, {"py/tuple": [-3.0, 50.0, 2.0, 1.0]}]}}, "world_matrix": {"py/object": "glm.mat4x4", "py/state": {"py/tuple": [{"py/tuple": [1.0, 0.0, 0.0, 0.0]}, {"py/tuple": [0.0, 1.0, 0.0, 0.0]}, {"py/tuple": [0.0, 0.0, 1.0, 0.0]}, {"py/tuple": [-3.0, 50.0, 2.0, 1.0]}]}}, "quaternion": {"py/object": "glm.quat", "py/state": {"py/tuple": [1.0, 0.0, 0.0, 0.0]}}, "dirty": false, "static": false}'
        }

        def "LinkComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.LinkComponent", "parent_id": {"py/object": "uuid.UUID", "hex": "e16eeb2a850a4bcb9f2368cc62429f55"}, "parent": {"py/object": "pyGandalf.scene.entity.Entity", "id": {"py/id": 1}, "enabled": true}, "prev_parent": {"py/id": 2}, "children": []}'
        }

        def "LightComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.LightComponent", "color": {"py/object": "glm.vec3", "py/state": {"py/tuple": [1.0, 1.0, 1.0]}}, "intensity": 15000.0}'
        }
    }

    def "Entity7290fe5143c9484884e34a7d3f9e0ecc"
    {
        custom bool enabled = 1
        custom string id = "7290fe5143c9484884e34a7d3f9e0ecc"

        def "InfoComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.InfoComponent", "tag": "sea_floor", "enabled": true}'
        }

        def "TransformComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.TransformComponent", "translation": {"py/object": "glm.vec3", "py/state": {"py/tuple": [0.0, 2.0, 0.0]}}, "rotation": {"py/object": "glm.vec3", "py/state": {"py/tuple": [270.0, 0.0, 0.0]}}, "scale": {"py/object": "glm.vec3", "py/state": {"py/tuple": [20.0, 20.0, 20.0]}}, "local_matrix": {"py/object": "glm.mat4x4", "py/state": {"py/tuple": [{"py/tuple": [20.0, 0.0, 0.0, 0.0]}, {"py/tuple": [0.0, 1.1920928955078125e-06, -19.999998092651367, 0.0]}, {"py/tuple": [0.0, 19.999998092651367, 1.1920928955078125e-06, 0.0]}, {"py/tuple": [0.0, 2.0, 0.0, 1.0]}]}}, "world_matrix": {"py/object": "glm.mat4x4", "py/state": {"py/tuple": [{"py/tuple": [20.0, 0.0, 0.0, 0.0]}, {"py/tuple": [0.0, 1.1920928955078125e-06, -19.999998092651367, 0.0]}, {"py/tuple": [0.0, 19.999998092651367, 1.1920928955078125e-06, 0.0]}, {"py/tuple": [-8.245583534240723, 2.0, -6.962412357330322, 1.0]}]}}, "quaternion": {"py/object": "glm.quat", "py/state": {"py/tuple": [-0.7071067690849304, 0.7071067690849304, 0.0, -0.0]}}, "dirty": false, "static": false}'
        }

        def "LinkComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.LinkComponent", "parent_id": {"py/object": "uuid.UUID", "hex": "689b033f93be475cb463aaf38c9c2f68"}, "parent": {"py/object": "pyGandalf.scene.entity.Entity", "id": {"py/id": 1}, "enabled": true}, "prev_parent": {"py/id": 2}, "children": []}'
        }

        def "StaticMeshComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.StaticMeshComponent", "name": "floor_mesh", "attributes": [{"py/reduce": [{"py/function": "numpy._core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [6, 3]}, {"py/reduce": [{"py/type": "numpy.dtype"}, {"py/tuple": ["f4", false, true]}, {"py/tuple": [3, "<", null, null, null, -1, -1, 0]}]}, false, {"py/b64": "AAAgwgAAIMIAAAAAAAAgQgAAIMIAAAAAAAAgQgAAIEIAAAAAAAAgQgAAIEIAAAAAAAAgwgAAIEIAAAAAAAAgwgAAIMIAAAAA"}]}]}, {"py/reduce": [{"py/function": "numpy._core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [6, 2]}, {"py/id": 3}, false, {"py/b64": "AAAAAAAAgD8AAIA/AACAPwAAgD8AAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/"}]}]}], "indices": null, "render_pipeline": {"py/reduce": [{"py/function": "numpy._core.multiarray.scalar"}, {"py/tuple": [{"py/reduce": [{"py/type": "numpy.dtype"}, {"py/tuple": ["u4", false, true]}, {"py/tuple": [3, "<", null, null, null, -1, -1, 0]}]}, {"py/b64": "AgAAAA=="}]}]}, "buffers": [{"py/reduce": [{"py/function": "numpy._core.multiarray.scalar"}, {"py/tuple": [{"py/id": 6}, {"py/b64": "AwAAAA=="}]}]}, {"py/reduce": [{"py/function": "numpy._core.multiarray.scalar"}, {"py/tuple": [{"py/id": 6}, {"py/b64": "BAAAAA=="}]}]}], "index_buffer": null, "changed": false, "batch": 0, "load_from_file": false, "hash": {"py/object": "uuid.UUID", "hex": "bf0a818325cc4ab3939d737f732101d3"}}'
        }

        def "MaterialComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.MaterialComponent", "name": "M_WoodFloor", "instance": {"py/object": "pyGandalf.utilities.opengl_material_lib.MaterialInstance", "name": "M_WoodFloor", "data": {"py/object": "pyGandalf.utilities.opengl_material_lib.MaterialData", "base_template": "water", "color": {"py/object": "glm.vec4", "py/state": {"py/tuple": [1.0, 1.0, 1.0, 1.0]}}, "textures": ["reflection_texture", "refraction_texture", "dudvMap", "normalMap", "depth_refraction_texture"], "glossiness": 3.0, "scale": 200, "elevationScale": 10.0, "generate": 1, "mapSize": 2, "cameraCoords": {"py/object": "glm.vec2", "py/state": {"py/tuple": [0.0, 0.0]}}, "metallic": 0.0, "roughness": 0.6, "ao": 1.0, "depthOfBlend": 0.2, "maxHeight": 60.0, "heightOfSnow": 0.9, "heightOfGrass": 0.03, "rockColor": {"py/object": "glm.vec4", "py/state": {"py/tuple": [0.12999999523162842, 0.12999999523162842, 0.12999999523162842, 1.0]}}, "rockBlendAmount": 1.14, "slopeTreshold": 0.8, "snowColor": {"py/object": "glm.vec4", "py/state": {"py/tuple": [0.9300000071525574, 0.8299999833106995, 0.8299999833106995, 1.0]}}, "grassColor": {"py/object": "glm.vec4", "py/state": {"py/tuple": [0.25999999046325684, 0.8399999737739563, 0.20000000298023224, 1.0]}}, "sandColor": {"py/object": "glm.vec4", "py/state": {"py/tuple": [1.0, 0.699999988079071, 0.5400000214576721, 1.0]}}, "tiling": {"py/object": "glm.ivec2", "py/state": {"py/tuple": [10, 10]}}, "useTextures": false}, "descriptor": {"py/object": "pyGandalf.utilities.opengl_material_lib.MaterialDescriptor", "primitive": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_TRIANGLES", 4]}, "py/state": "GL_TRIANGLES"}, "cull_enabled": true, "cull_face": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_BACK", 1029]}, "py/state": "GL_BACK"}, "patch_resolution": 20, "vertices_per_patch": 20, "depth_enabled": true, "depth_func": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LEQUAL", 515]}, "py/state": "GL_LEQUAL"}, "depth_mask": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_TRUE", 1]}, "py/state": "GL_TRUE"}, "blend_enabled": true, "blend_func_source": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_SRC_ALPHA", 770]}, "py/state": "GL_SRC_ALPHA"}, "blend_func_destination": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_ONE_MINUS_SRC_ALPHA", 771]}, "py/state": "GL_ONE_MINUS_SRC_ALPHA"}, "blend_equation": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FUNC_ADD", 32774]}, "py/state": "GL_FUNC_ADD"}}, "isMeshShader": false, "shader_program": 3, "shader_params": {"u_ModelViewProjection": "mat4", "u_Model": "mat4", "u_ViewPosition": "vec3", "reflection": "sampler2D", "refraction": "sampler2D", "dudvMap": "sampler2D", "normalMap": "sampler2D", "depthMap": "sampler2D", "offset": "float", "u_LightCount": "int", "u_LightPositions": "vec3[16]", "u_LightColors": "vec3[16]", "u_LightIntensities": "float[16]"}}}'
        }
    }

    def "Entity42545c79d2d04d2183708d595cf8e8c1"
    {
        custom bool enabled = 1
        custom string id = "42545c79d2d04d2183708d595cf8e8c1"

        def "InfoComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.InfoComponent", "tag": "cloudy_skybox", "enabled": true}'
        }

        def "TransformComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.TransformComponent", "translation": {"py/object": "glm.vec3", "py/state": {"py/tuple": [0.0, 0.0, 0.0]}}, "rotation": {"py/object": "glm.vec3", "py/state": {"py/tuple": [0.0, 0.0, 0.0]}}, "scale": {"py/object": "glm.vec3", "py/state": {"py/tuple": [1.0, 1.0, 1.0]}}, "local_matrix": {"py/object": "glm.mat4x4", "py/state": {"py/tuple": [{"py/tuple": [1.0, 0.0, 0.0, 0.0]}, {"py/tuple": [0.0, 1.0, 0.0, 0.0]}, {"py/tuple": [0.0, 0.0, 1.0, 0.0]}, {"py/tuple": [0.0, 0.0, 0.0, 1.0]}]}}, "world_matrix": {"py/object": "glm.mat4x4", "py/state": {"py/tuple": [{"py/tuple": [1.0, 0.0, 0.0, 0.0]}, {"py/tuple": [0.0, 1.0, 0.0, 0.0]}, {"py/tuple": [0.0, 0.0, 1.0, 0.0]}, {"py/tuple": [0.0, 0.0, 0.0, 1.0]}]}}, "quaternion": {"py/object": "glm.quat", "py/state": {"py/tuple": [1.0, 0.0, 0.0, 0.0]}}, "dirty": false, "static": false}'
        }

        def "LinkComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.LinkComponent", "parent_id": 0, "parent": null, "prev_parent": null, "children": []}'
        }

        def "StaticMeshComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.StaticMeshComponent", "name": "skybox", "attributes": [{"py/reduce": [{"py/function": "numpy._core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [36, 3]}, {"py/reduce": [{"py/type": "numpy.dtype"}, {"py/tuple": ["f4", false, true]}, {"py/tuple": [3, "<", null, null, null, -1, -1, 0]}]}, false, {"py/b64": "AACAvwAAgL8AAIC/AACAvwAAgL8AAIA/AACAvwAAgD8AAIA/AACAPwAAgD8AAIC/AACAvwAAgL8AAIC/AACAvwAAgD8AAIC/AACAPwAAgL8AAIA/AACAvwAAgL8AAIC/AACAPwAAgL8AAIC/AACAPwAAgD8AAIC/AACAPwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgL8AAIC/AACAvwAAgD8AAIA/AACAvwAAgD8AAIC/AACAPwAAgL8AAIA/AACAvwAAgL8AAIA/AACAvwAAgL8AAIC/AACAvwAAgD8AAIA/AACAvwAAgL8AAIA/AACAPwAAgL8AAIA/AACAPwAAgD8AAIA/AACAPwAAgL8AAIC/AACAPwAAgD8AAIC/AACAPwAAgL8AAIC/AACAPwAAgD8AAIA/AACAPwAAgL8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIC/AACAvwAAgD8AAIC/AACAPwAAgD8AAIA/AACAvwAAgD8AAIC/AACAvwAAgD8AAIA/AACAPwAAgD8AAIA/AACAvwAAgD8AAIA/AACAPwAAgL8AAIA/"}]}]}], "indices": null, "render_pipeline": {"py/reduce": [{"py/function": "numpy._core.multiarray.scalar"}, {"py/tuple": [{"py/reduce": [{"py/type": "numpy.dtype"}, {"py/tuple": ["u4", false, true]}, {"py/tuple": [3, "<", null, null, null, -1, -1, 0]}]}, {"py/b64": "AwAAAA=="}]}]}, "buffers": [{"py/reduce": [{"py/function": "numpy._core.multiarray.scalar"}, {"py/tuple": [{"py/id": 5}, {"py/b64": "BQAAAA=="}]}]}], "index_buffer": null, "changed": false, "batch": 0, "load_from_file": false, "hash": {"py/object": "uuid.UUID", "hex": "6acd9112eba64353a7dbe920ff788281"}}'
        }

        def "MaterialComponent"
        {
            custom string dict = '{"py/object": "pyGandalf.scene.components.MaterialComponent", "name": "M_CloudySkybox", "instance": {"py/object": "pyGandalf.utilities.opengl_material_lib.MaterialInstance", "name": "M_CloudySkybox", "data": {"py/object": "pyGandalf.utilities.opengl_material_lib.MaterialData", "base_template": "skybox", "color": {"py/object": "glm.vec4", "py/state": {"py/tuple": [1.0, 1.0, 1.0, 1.0]}}, "textures": ["cloudy_cube_map"], "glossiness": 3.0, "scale": 200, "elevationScale": 10.0, "generate": 1, "mapSize": 2, "cameraCoords": {"py/object": "glm.vec2", "py/state": {"py/tuple": [0.0, 0.0]}}, "metallic": 0.0, "roughness": 0.6, "ao": 1.0, "depthOfBlend": 0.2, "maxHeight": 60.0, "heightOfSnow": 0.9, "heightOfGrass": 0.03, "rockColor": {"py/object": "glm.vec4", "py/state": {"py/tuple": [0.12999999523162842, 0.12999999523162842, 0.12999999523162842, 1.0]}}, "rockBlendAmount": 1.14, "slopeTreshold": 0.8, "snowColor": {"py/object": "glm.vec4", "py/state": {"py/tuple": [0.9300000071525574, 0.8299999833106995, 0.8299999833106995, 1.0]}}, "grassColor": {"py/object": "glm.vec4", "py/state": {"py/tuple": [0.25999999046325684, 0.8399999737739563, 0.20000000298023224, 1.0]}}, "sandColor": {"py/object": "glm.vec4", "py/state": {"py/tuple": [1.0, 0.699999988079071, 0.5400000214576721, 1.0]}}, "tiling": {"py/object": "glm.ivec2", "py/state": {"py/tuple": [10, 10]}}, "useTextures": false}, "descriptor": {"py/object": "pyGandalf.utilities.opengl_material_lib.MaterialDescriptor", "primitive": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_TRIANGLES", 4]}, "py/state": "GL_TRIANGLES"}, "cull_enabled": true, "cull_face": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FRONT", 1028]}, "py/state": "GL_FRONT"}, "patch_resolution": 20, "vertices_per_patch": 20, "depth_enabled": true, "depth_func": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LEQUAL", 515]}, "py/state": "GL_LEQUAL"}, "depth_mask": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FALSE", 0]}, "py/state": "GL_FALSE"}, "blend_enabled": true, "blend_func_source": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_SRC_ALPHA", 770]}, "py/state": "GL_SRC_ALPHA"}, "blend_func_destination": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_ONE_MINUS_SRC_ALPHA", 771]}, "py/state": "GL_ONE_MINUS_SRC_ALPHA"}, "blend_equation": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FUNC_ADD", 32774]}, "py/state": "GL_FUNC_ADD"}}, "isMeshShader": false, "shader_program": 11, "shader_params": {"u_ViewProjection": "mat4", "u_Skybox": "samplerCube"}}}'
        }
    }
}

def "Systems"
{
    def "TransformSystem"
    {
        custom string[] filters = ["TransformComponent"]
        custom string name = "TransformSystem"
    }

    def "LinkSystem"
    {
        custom string[] filters = ["LinkComponent", "TransformComponent"]
        custom string name = "LinkSystem"
    }

    def "CameraSystem"
    {
        custom string[] filters = ["CameraComponent", "TransformComponent"]
        custom string name = "CameraSystem"
    }

    def "LightSystem"
    {
        custom string[] filters = ["LightComponent", "TransformComponent"]
        custom string name = "LightSystem"
    }

    def "TerrainGenerationSystem"
    {
        custom string[] filters = ["TerrainComponent", "StaticMeshComponent", "TransformComponent"]
        custom string name = "TerrainGenerationSystem"
    }

    def "ErosionSystem"
    {
        custom string[] filters = ["ErosionComponent", "TerrainComponent"]
        custom string name = "ErosionSystem"
    }

    def "MyOpenGLRenderingSystem"
    {
        custom string[] filters = ["StaticMeshComponent", "MaterialComponent", "TransformComponent"]
        custom string name = "MyOpenGLRenderingSystem"
    }

    def "CameraControllerSystem"
    {
        custom string[] filters = ["CameraControllerComponent", "CameraComponent", "TransformComponent"]
        custom string name = "CameraControllerSystem"
    }
}

def "Textures"
{
    def "grassAlbedo"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["terrain", "Grass_B_BaseColor.png"]}]}, "image_bytes": null, "width": 2048, "height": 2048}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA8", 32856]}, "py/state": "GL_RGBA8"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR_MIPMAP_LINEAR", 9987]}, "py/state": "GL_LINEAR_MIPMAP_LINEAR"}, "max_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}}'
        custom int id = 3
        custom string name = "grassAlbedo"
        custom float slot = 0
    }

    def "snowAlbedo"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["terrain", "Snow_BaseColor.png"]}]}, "image_bytes": null, "width": 2048, "height": 2048}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA8", 32856]}, "py/state": "GL_RGBA8"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR_MIPMAP_LINEAR", 9987]}, "py/state": "GL_LINEAR_MIPMAP_LINEAR"}, "max_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}}'
        custom int id = 4
        custom string name = "snowAlbedo"
        custom float slot = 1
    }

    def "sandAlbedo"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["terrain", "Sand_BaseColor.png"]}]}, "image_bytes": null, "width": 2048, "height": 2048}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA8", 32856]}, "py/state": "GL_RGBA8"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR_MIPMAP_LINEAR", 9987]}, "py/state": "GL_LINEAR_MIPMAP_LINEAR"}, "max_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}}'
        custom int id = 5
        custom string name = "sandAlbedo"
        custom float slot = 2
    }

    def "grassNormal"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["terrain", "Grass_B_Normal.png"]}]}, "image_bytes": null, "width": 2048, "height": 2048}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA8", 32856]}, "py/state": "GL_RGBA8"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR_MIPMAP_LINEAR", 9987]}, "py/state": "GL_LINEAR_MIPMAP_LINEAR"}, "max_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}}'
        custom int id = 6
        custom string name = "grassNormal"
        custom float slot = 3
    }

    def "snowNormal"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["terrain", "Snow_Normal.png"]}]}, "image_bytes": null, "width": 2048, "height": 2048}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA8", 32856]}, "py/state": "GL_RGBA8"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR_MIPMAP_LINEAR", 9987]}, "py/state": "GL_LINEAR_MIPMAP_LINEAR"}, "max_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}}'
        custom int id = 7
        custom string name = "snowNormal"
        custom float slot = 4
    }

    def "sandNormal"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["terrain", "Sand_Normal.png"]}]}, "image_bytes": null, "width": 2048, "height": 2048}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA8", 32856]}, "py/state": "GL_RGBA8"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR_MIPMAP_LINEAR", 9987]}, "py/state": "GL_LINEAR_MIPMAP_LINEAR"}, "max_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}}'
        custom int id = 8
        custom string name = "sandNormal"
        custom float slot = 5
    }

    def "grassMask"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["terrain", "Grass_B_MaskMap.png"]}]}, "image_bytes": null, "width": 2048, "height": 2048}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA8", 32856]}, "py/state": "GL_RGBA8"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR_MIPMAP_LINEAR", 9987]}, "py/state": "GL_LINEAR_MIPMAP_LINEAR"}, "max_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}}'
        custom int id = 9
        custom string name = "grassMask"
        custom float slot = 6
    }

    def "snowMask"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["terrain", "Snow_MaskMap.png"]}]}, "image_bytes": null, "width": 2048, "height": 2048}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA8", 32856]}, "py/state": "GL_RGBA8"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR_MIPMAP_LINEAR", 9987]}, "py/state": "GL_LINEAR_MIPMAP_LINEAR"}, "max_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}}'
        custom int id = 10
        custom string name = "snowMask"
        custom float slot = 7
    }

    def "sandMask"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["terrain", "Sand_MaskMap.png"]}]}, "image_bytes": null, "width": 2048, "height": 2048}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA8", 32856]}, "py/state": "GL_RGBA8"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR_MIPMAP_LINEAR", 9987]}, "py/state": "GL_LINEAR_MIPMAP_LINEAR"}, "max_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}}'
        custom int id = 11
        custom string name = "sandMask"
        custom float slot = 8
    }

    def "rockAlbedo"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["terrain", "Rock_BaseColor.png"]}]}, "image_bytes": null, "width": 2048, "height": 2048}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA8", 32856]}, "py/state": "GL_RGBA8"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR_MIPMAP_LINEAR", 9987]}, "py/state": "GL_LINEAR_MIPMAP_LINEAR"}, "max_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}}'
        custom int id = 12
        custom string name = "rockAlbedo"
        custom float slot = 9
    }

    def "rockNormal"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["terrain", "Rock_Normal.png"]}]}, "image_bytes": null, "width": 2048, "height": 2048}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA8", 32856]}, "py/state": "GL_RGBA8"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR_MIPMAP_LINEAR", 9987]}, "py/state": "GL_LINEAR_MIPMAP_LINEAR"}, "max_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}}'
        custom int id = 13
        custom string name = "rockNormal"
        custom float slot = 10
    }

    def "rockMask"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["terrain", "Rock_MaskMap.png"]}]}, "image_bytes": null, "width": 2048, "height": 2048}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA8", 32856]}, "py/state": "GL_RGBA8"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR_MIPMAP_LINEAR", 9987]}, "py/state": "GL_LINEAR_MIPMAP_LINEAR"}, "max_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}}'
        custom int id = 14
        custom string name = "rockMask"
        custom float slot = 11
    }

    def "heightmap"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": null, "image_bytes": null, "width": 512, "height": 512}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA32F", 34836]}, "py/state": "GL_RGBA32F"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FLOAT", 5126]}, "py/state": "GL_FLOAT"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_CLAMP_TO_EDGE", 33071]}, "py/state": "GL_CLAMP_TO_EDGE"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}, "max_filter": {"py/id": 6}}'
        custom int id = 15
        custom string name = "heightmap"
        custom float slot = 12
    }

    def "loadedHeightmap"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": null, "image_bytes": null, "width": 512, "height": 512}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA32F", 34836]}, "py/state": "GL_RGBA32F"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FLOAT", 5126]}, "py/state": "GL_FLOAT"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_CLAMP_TO_EDGE", 33071]}, "py/state": "GL_CLAMP_TO_EDGE"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}, "max_filter": {"py/id": 6}}'
        custom int id = 16
        custom string name = "loadedHeightmap"
        custom float slot = 13
    }

    def "dropsPosSpeed"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": null, "image_bytes": null, "width": 512, "height": 512}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA32F", 34836]}, "py/state": "GL_RGBA32F"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FLOAT", 5126]}, "py/state": "GL_FLOAT"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_CLAMP_TO_EDGE", 33071]}, "py/state": "GL_CLAMP_TO_EDGE"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}, "max_filter": {"py/id": 6}}'
        custom int id = 17
        custom string name = "dropsPosSpeed"
        custom float slot = 14
    }

    def "dropsVolSed"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": null, "image_bytes": null, "width": 512, "height": 512}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA32F", 34836]}, "py/state": "GL_RGBA32F"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FLOAT", 5126]}, "py/state": "GL_FLOAT"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_CLAMP_TO_EDGE", 33071]}, "py/state": "GL_CLAMP_TO_EDGE"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}, "max_filter": {"py/id": 6}}'
        custom int id = 18
        custom string name = "dropsVolSed"
        custom float slot = 15
    }

    def "normals"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": null, "image_bytes": null, "width": 512, "height": 512}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA32F", 34836]}, "py/state": "GL_RGBA32F"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FLOAT", 5126]}, "py/state": "GL_FLOAT"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_CLAMP_TO_EDGE", 33071]}, "py/state": "GL_CLAMP_TO_EDGE"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}, "max_filter": {"py/id": 6}}'
        custom int id = 19
        custom string name = "normals"
        custom float slot = 16
    }

    def "cloudy_cube_map"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": [{"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["skybox", "day_sunless", "right.png"]}]}, {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["skybox", "day_sunless", "left.png"]}]}, {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["skybox", "day_sunless", "top.png"]}]}, {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["skybox", "day_sunless", "bottom.png"]}]}, {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["skybox", "day_sunless", "front.png"]}]}, {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["skybox", "day_sunless", "back.png"]}]}], "image_bytes": null, "width": 0, "height": 0}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": true, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [2]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGB8", 32849]}, "py/state": "GL_RGB8"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGB", 6407]}, "py/state": "GL_RGB"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}, "max_filter": {"py/id": 6}}'
        custom int id = 20
        custom string name = "cloudy_cube_map"
        custom float slot = 17
    }

    def "dudvMap"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["waterDUDV.png"]}]}, "image_bytes": null, "width": 512, "height": 512}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA8", 32856]}, "py/state": "GL_RGBA8"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR_MIPMAP_LINEAR", 9987]}, "py/state": "GL_LINEAR_MIPMAP_LINEAR"}, "max_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}}'
        custom int id = 21
        custom string name = "dudvMap"
        custom float slot = 18
    }

    def "normalMap"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["normal.png"]}]}, "image_bytes": null, "width": 512, "height": 512}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA8", 32856]}, "py/state": "GL_RGBA8"}, "format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGBA", 6408]}, "py/state": "GL_RGBA"}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 5}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR_MIPMAP_LINEAR", 9987]}, "py/state": "GL_LINEAR_MIPMAP_LINEAR"}, "max_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}}'
        custom int id = 22
        custom string name = "normalMap"
        custom float slot = 19
    }

    def "depth_texture"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": null, "image_bytes": null, "width": 1024, "height": 1024}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_DEPTH_COMPONENT", 6402]}, "py/state": "GL_DEPTH_COMPONENT"}, "format": {"py/id": 2}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FLOAT", 5126]}, "py/state": "GL_FLOAT"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_CLAMP_TO_BORDER", 33069]}, "py/state": "GL_CLAMP_TO_BORDER"}, "wrap_t": {"py/id": 4}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_NEAREST", 9728]}, "py/state": "GL_NEAREST"}, "max_filter": {"py/id": 5}}'
        custom int id = 23
        custom string name = "depth_texture"
        custom float slot = 20
    }

    def "reflection_texture"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": null, "image_bytes": null, "width": 320, "height": 180}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGB", 6407]}, "py/state": "GL_RGB"}, "format": {"py/id": 2}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 4}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}, "max_filter": {"py/id": 5}}'
        custom int id = 24
        custom string name = "reflection_texture"
        custom float slot = 21
    }

    def "refraction_texture"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": null, "image_bytes": null, "width": 1280, "height": 720}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_RGB", 6407]}, "py/state": "GL_RGB"}, "format": {"py/id": 2}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_UNSIGNED_BYTE", 5121]}, "py/state": "GL_UNSIGNED_BYTE"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_REPEAT", 10497]}, "py/state": "GL_REPEAT"}, "wrap_t": {"py/id": 4}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LINEAR", 9729]}, "py/state": "GL_LINEAR"}, "max_filter": {"py/id": 5}}'
        custom int id = 25
        custom string name = "refraction_texture"
        custom float slot = 22
    }

    def "depth_refraction_texture"
    {
        custom string data = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureData", "path": null, "image_bytes": null, "width": 1280, "height": 720}'
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_texture_lib.TextureDescriptor", "flip": false, "dimention": {"py/reduce": [{"py/type": "pyGandalf.utilities.opengl_texture_lib.TextureDimension"}, {"py/tuple": [0]}]}, "internal_format": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_DEPTH_COMPONENT", 6402]}, "py/state": "GL_DEPTH_COMPONENT"}, "format": {"py/id": 2}, "type": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FLOAT", 5126]}, "py/state": "GL_FLOAT"}, "wrap_s": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_CLAMP_TO_BORDER", 33069]}, "py/state": "GL_CLAMP_TO_BORDER"}, "wrap_t": {"py/id": 4}, "min_filter": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_NEAREST", 9728]}, "py/state": "GL_NEAREST"}, "max_filter": {"py/id": 5}}'
        custom int id = 26
        custom string name = "depth_refraction_texture"
        custom float slot = 23
    }
}

def "Shaders"
{
    def "water"
    {
        custom string fs_path = "opengl\\water.fs"
        custom string gs_path = ""
        custom string name = "water"
        custom int shader_program = 3
        custom string tcs_path = ""
        custom string tes_path = ""
        custom string vs_path = "opengl\\water.vs"
    }

    def "default_tessellation"
    {
        custom string fs_path = "opengl\\procedural.fs"
        custom string gs_path = ""
        custom string name = "default_tessellation"
        custom int shader_program = 8
        custom string tcs_path = "opengl\\procedural.tcs"
        custom string tes_path = "opengl\\procedural.tes"
        custom string vs_path = "opengl\\procedural.vs"
    }

    def "skybox"
    {
        custom string fs_path = "opengl\\skybox.fs"
        custom string gs_path = ""
        custom string name = "skybox"
        custom int shader_program = 11
        custom string tcs_path = ""
        custom string tes_path = ""
        custom string vs_path = "opengl\\skybox.vs"
    }
}

def "Materials"
{
    def "M_Terrain"
    {
        custom string base_template = "default_tessellation"
        custom color4f color = (1, 1, 1, 1)
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_material_lib.MaterialDescriptor", "primitive": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_PATCHES", 14]}, "py/state": "GL_PATCHES"}, "cull_enabled": true, "cull_face": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FRONT", 1028]}, "py/state": "GL_FRONT"}, "patch_resolution": 8, "vertices_per_patch": 4, "depth_enabled": true, "depth_func": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LEQUAL", 515]}, "py/state": "GL_LEQUAL"}, "depth_mask": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_TRUE", 1]}, "py/state": "GL_TRUE"}, "blend_enabled": true, "blend_func_source": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_SRC_ALPHA", 770]}, "py/state": "GL_SRC_ALPHA"}, "blend_func_destination": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_ONE_MINUS_SRC_ALPHA", 771]}, "py/state": "GL_ONE_MINUS_SRC_ALPHA"}, "blend_equation": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FUNC_ADD", 32774]}, "py/state": "GL_FUNC_ADD"}}'
        custom float glossiness = 3
        custom string name = "M_Terrain"
        custom string[] textures = ["grassAlbedo", "snowAlbedo", "sandAlbedo", "grassNormal", "snowNormal", "sandNormal", "grassMask", "snowMask", "sandMask", "rockAlbedo", "rockNormal", "rockMask", "heightmap", "normals"]
    }

    def "M_CloudySkybox"
    {
        custom string base_template = "skybox"
        custom color4f color = (1, 1, 1, 1)
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_material_lib.MaterialDescriptor", "primitive": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_TRIANGLES", 4]}, "py/state": "GL_TRIANGLES"}, "cull_enabled": true, "cull_face": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FRONT", 1028]}, "py/state": "GL_FRONT"}, "patch_resolution": 20, "vertices_per_patch": 20, "depth_enabled": true, "depth_func": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LEQUAL", 515]}, "py/state": "GL_LEQUAL"}, "depth_mask": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FALSE", 0]}, "py/state": "GL_FALSE"}, "blend_enabled": true, "blend_func_source": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_SRC_ALPHA", 770]}, "py/state": "GL_SRC_ALPHA"}, "blend_func_destination": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_ONE_MINUS_SRC_ALPHA", 771]}, "py/state": "GL_ONE_MINUS_SRC_ALPHA"}, "blend_equation": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FUNC_ADD", 32774]}, "py/state": "GL_FUNC_ADD"}}'
        custom float glossiness = 3
        custom string name = "M_CloudySkybox"
        custom string[] textures = ["cloudy_cube_map"]
    }

    def "M_WoodFloor"
    {
        custom string base_template = "water"
        custom color4f color = (1, 1, 1, 1)
        custom string descriptor = '{"py/object": "pyGandalf.utilities.opengl_material_lib.MaterialDescriptor", "primitive": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_TRIANGLES", 4]}, "py/state": "GL_TRIANGLES"}, "cull_enabled": true, "cull_face": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_BACK", 1029]}, "py/state": "GL_BACK"}, "patch_resolution": 20, "vertices_per_patch": 20, "depth_enabled": true, "depth_func": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_LEQUAL", 515]}, "py/state": "GL_LEQUAL"}, "depth_mask": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_TRUE", 1]}, "py/state": "GL_TRUE"}, "blend_enabled": true, "blend_func_source": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_SRC_ALPHA", 770]}, "py/state": "GL_SRC_ALPHA"}, "blend_func_destination": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_ONE_MINUS_SRC_ALPHA", 771]}, "py/state": "GL_ONE_MINUS_SRC_ALPHA"}, "blend_equation": {"py/object": "OpenGL.constant.IntConstant", "py/newargs": {"py/tuple": ["GL_FUNC_ADD", 32774]}, "py/state": "GL_FUNC_ADD"}}'
        custom float glossiness = 3
        custom string name = "M_WoodFloor"
        custom string[] textures = ["reflection_texture", "refraction_texture", "dudvMap", "normalMap", "depth_refraction_texture"]
    }
}

def "Meshes"
{
}

def "Renderer"
{
    def "Shadows"
    {
        custom bool enabled = 0
    }
}

def "Decorators"
{
    def "Components"
    {
        custom string dict = "{\"<class 'pyGandalf.scene.components.TransformComponent'>\": {\"py/type\": \"pyGandalf.scene.components.TransformComponent\"}}"
    }
}

